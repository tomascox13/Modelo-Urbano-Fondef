{"frames":[{"func":"merge(zonas_local_area_analisis, hogs_zonas, by = \"GEOCODIGO\", \n    all.x = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"merge.sf(zonas_local_area_analisis, hogs_zonas, by = \"GEOCODIGO\", \n    all.x = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"NextMethod()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"merge.data.frame(zonas_local_area_analisis, hogs_zonas, by = \"GEOCODIGO\", \n    all.x = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fix.by(by.y, y)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(ngettext(sum(bad), \"'by' must specify a uniquely valid column\", \n    \"'by' must specify uniquely valid columns\"), domain = NA)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in fix.by(by.y, y) : 'by' must specify a uniquely valid column\n"}